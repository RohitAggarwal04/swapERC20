{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _events = _interopRequireDefault(require(\"events\"));\nvar _verifyChainId = _interopRequireDefault(require(\"../utils/verifyChainId\"));\nvar _events2 = require(\"./events\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Abstract connector to connect EIP-1193 providers to Moralis\n *\n * It should implement at least:\n * - activate()\n * - Emit ConnectorEvent.CHAIN_CHANGED when the chain has changed (if possible)\n * - Emit ConnectorEvent.ACCOUNT_CHANGED when the account has changed (if possible)\n * - type: a name to identify\n * - network: the network type that is used (eg. 'evm')\n */\n\nvar AbstractWeb3Connector = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(AbstractWeb3Connector, _EventEmitter);\n  var _super = _createSuper(AbstractWeb3Connector);\n  function AbstractWeb3Connector() {\n    var _context, _context2, _context3, _context4;\n    var _this;\n    (0, _classCallCheck2.default)(this, AbstractWeb3Connector);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"type\", 'abstract');\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"network\", 'evm');\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"account\", null);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"chainId\", null);\n    _this.handleAccountsChanged = (0, _bind.default)(_context = _this.handleAccountsChanged).call(_context, (0, _assertThisInitialized2.default)(_this));\n    _this.handleChainChanged = (0, _bind.default)(_context2 = _this.handleChainChanged).call(_context2, (0, _assertThisInitialized2.default)(_this));\n    _this.handleConnect = (0, _bind.default)(_context3 = _this.handleConnect).call(_context3, (0, _assertThisInitialized2.default)(_this));\n    _this.handleDisconnect = (0, _bind.default)(_context4 = _this.handleDisconnect).call(_context4, (0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n  (0, _createClass2.default)(AbstractWeb3Connector, [{\n    key: \"subscribeToEvents\",\n    value: function (provider) {\n      if (provider && provider.on) {\n        provider.on(_events2.EthereumEvents.CHAIN_CHANGED, this.handleChainChanged);\n        provider.on(_events2.EthereumEvents.ACCOUNTS_CHANGED, this.handleAccountsChanged);\n        provider.on(_events2.EthereumEvents.CONNECT, this.handleConnect);\n        provider.on(_events2.EthereumEvents.DISCONNECT, this.handleDisconnect);\n      }\n    }\n  }, {\n    key: \"unsubscribeToEvents\",\n    value: function (provider) {\n      if (provider && provider.removeListener) {\n        provider.removeListener(_events2.EthereumEvents.CHAIN_CHANGED, this.handleChainChanged);\n        provider.removeListener(_events2.EthereumEvents.ACCOUNTS_CHANGED, this.handleAccountsChanged);\n        provider.removeListener(_events2.EthereumEvents.CONNECT, this.handleConnect);\n        provider.removeListener(_events2.EthereumEvents.DISCONNECT, this.handleDisconnect);\n      }\n    }\n    /**\n     * Activates the provider.\n     * Should returns an object with:\n     * - provider: A valid EIP-1193 provider\n     * - chainId(optional): the chainId that has been connected to (in hex format)\n     * - account(optional): the address that is connected to the provider\n     */\n  }, {\n    key: \"activate\",\n    value: function () {\n      var _activate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        return _regenerator.default.wrap(function (_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                throw new Error('Not implemented: activate()');\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function () {\n        return _activate.apply(this, arguments);\n      };\n    }()\n    /**\n     * Updates account and emit event, on EIP-1193 accountsChanged events\n     */\n  }, {\n    key: \"handleAccountsChanged\",\n    value: function (accounts) {\n      var account = accounts && accounts[0] ? accounts[0].toLowerCase() : null;\n      this.account = account;\n      this.emit(_events2.ConnectorEvents.ACCOUNT_CHANGED, account);\n    }\n    /**\n     * Updates chainId and emit event, on EIP-1193 accountsChanged events\n     */\n  }, {\n    key: \"handleChainChanged\",\n    value: function (chainId) {\n      var newChainId = (0, _verifyChainId.default)(chainId);\n      this.chainId = newChainId;\n      this.emit(_events2.ConnectorEvents.CHAIN_CHANGED, newChainId);\n    }\n  }, {\n    key: \"handleConnect\",\n    value: function (connectInfo) {\n      this.emit(_events2.ConnectorEvents.CONNECT, connectInfo);\n    }\n  }, {\n    key: \"handleDisconnect\",\n    value: function (error) {\n      this.emit(_events2.ConnectorEvents.DISCONNECT, error);\n    }\n    /**\n     * Cleans all active listners, connections and stale references\n     */\n  }, {\n    key: \"deactivate\",\n    value: function () {\n      var _deactivate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {\n        return _regenerator.default.wrap(function (_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.unsubscribeToEvents(this.provider);\n                this.account = null;\n                this.chainId = null;\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      return function () {\n        return _deactivate.apply(this, arguments);\n      };\n    }()\n  }]);\n  return AbstractWeb3Connector;\n}(_events.default);\nvar _default = AbstractWeb3Connector;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}